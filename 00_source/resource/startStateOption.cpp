//============================================================
//
//	初期設定状態処理 [startStateOption.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "startStateOption.h"
#include "startManager.h"
#include "optionManager.h"

//************************************************************
//	子クラス [CStartStateOption] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CStartStateOption::CStartStateOption() :
	m_pOptionManager	(nullptr)	// 設定マネージャー
{

}

//============================================================
//	デストラクタ
//============================================================
CStartStateOption::~CStartStateOption()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CStartStateOption::Init()
{
	// メンバ変数を初期化
	m_pOptionManager = nullptr;	// 設定マネージャー

	// 設定マネージャーの生成
	m_pOptionManager = COptionManager::Create();
	if (m_pOptionManager == nullptr)
	{ // 生成に失敗した場合

		assert(false);
		return E_FAIL;
	}

	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CStartStateOption::Uninit()
{
	// 設定マネージャーの破棄
	SAFE_REF_RELEASE(m_pOptionManager);

	// 自身の破棄
	delete this;
}

//============================================================
//	更新処理
//============================================================
void CStartStateOption::Update(const float fDeltaTime)
{
	// 設定マネージャーの更新
	assert(m_pOptionManager != nullptr);
	if (m_pOptionManager->Update(fDeltaTime))
	{ // 状態遷移の操作が行われた場合

		// チュートリアル状態にする
		m_pContext->ChangeState(new CStartStateTutorial);
	}
}
