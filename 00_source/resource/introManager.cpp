//============================================================
//
//	イントロマネージャー処理 [introManager.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "introManager.h"
#include "manager.h"

//************************************************************
//	定数宣言
//************************************************************
namespace
{

}

//************************************************************
//	親クラス [CIntroManager] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CIntroManager::CIntroManager()
{

}

//============================================================
//	デストラクタ
//============================================================
CIntroManager::~CIntroManager()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CIntroManager::Init(void)
{
	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CIntroManager::Uninit(void)
{

}

//============================================================
//	更新処理
//============================================================
void CIntroManager::Update(const float fDeltaTime)
{
	// TODO：タイトル遷移
	GET_MANAGER->SetScene(CScene::MODE_TITLE);
}

//============================================================
//	生成処理
//============================================================
CIntroManager *CIntroManager::Create(void)
{
	// イントロマネージャーの生成
	CIntroManager *pIntroManager = new CIntroManager;
	if (pIntroManager == nullptr)
	{ // 生成に失敗した場合

		return nullptr;
	}
	else
	{ // 生成に成功した場合

		// イントロマネージャーの初期化
		if (FAILED(pIntroManager->Init()))
		{ // 初期化に失敗した場合

			// イントロマネージャーの破棄
			SAFE_DELETE(pIntroManager);
			return nullptr;
		}

		// 確保したアドレスを返す
		return pIntroManager;
	}
}

//============================================================
//	破棄処理
//============================================================
void CIntroManager::Release(CIntroManager *&prIntroManager)
{
	// イントロマネージャーの終了
	assert(prIntroManager != nullptr);
	prIntroManager->Uninit();

	// メモリ開放
	SAFE_DELETE(prIntroManager);
}
