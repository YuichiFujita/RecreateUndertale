//============================================================
//
//	デルタタイム処理 [deltaTime.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "deltaTime.h"
#include "manager.h"

//************************************************************
//	親クラス [CDeltaTime] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CDeltaTime::CDeltaTime() :
	m_dwOldTime	(0),	// 前回の処理開始時刻
	m_dwCurTime	(0),	// 今回の処理開始時刻
	m_fTime		(0.0f)	// 処理の経過時間
{

}

//============================================================
//	デストラクタ
//============================================================
CDeltaTime::~CDeltaTime()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CDeltaTime::Init(void)
{
	// メンバ変数を初期化
	m_dwOldTime	= timeGetTime();	// 前回の処理開始時刻
	m_dwCurTime	= timeGetTime();	// 今回の処理開始時刻
	m_fTime		= 0.0f;				// 処理の経過時間

	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CDeltaTime::Uninit(void)
{

}

//============================================================
//	更新処理
//============================================================
void CDeltaTime::Update(void)
{
	// 変数を宣言
	DWORD dwDiffDeltaTime = 0;	// 処理開始時刻の差分

	// 前フレームの開始時刻を保存
	m_dwOldTime = m_dwCurTime;

	// 現在時刻を開始時刻に保存
	m_dwCurTime = timeGetTime();

	// 処理開始時刻の差分を計算
	dwDiffDeltaTime = m_dwCurTime - m_dwOldTime;

	// 経過時間を計算
	m_fTime = dwDiffDeltaTime * 0.001f;
}

//============================================================
//	生成処理
//============================================================
CDeltaTime *CDeltaTime::Create(void)
{
	// デルタタイムの生成
	CDeltaTime *pDeltaTime = new CDeltaTime;
	if (pDeltaTime == nullptr)
	{ // 生成に失敗した場合

		return nullptr;
	}
	else
	{ // 生成に成功した場合

		// デルタタイムの初期化
		if (FAILED(pDeltaTime->Init()))
		{ // 初期化に失敗した場合

			// デルタタイムの破棄
			SAFE_DELETE(pDeltaTime);
			return nullptr;
		}

		// 確保したアドレスを返す
		return pDeltaTime;
	}
}

//============================================================
//	破棄処理
//============================================================
void CDeltaTime::Release(CDeltaTime *&prDeltaTime)
{
	// デルタタイムの終了
	assert(prDeltaTime != nullptr);
	prDeltaTime->Uninit();

	// メモリ開放
	SAFE_DELETE(prDeltaTime);
}
