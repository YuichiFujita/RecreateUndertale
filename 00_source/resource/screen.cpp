//============================================================
//
//	スクリーン処理 [screen.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "screen.h"

//************************************************************
//	子クラス [CScreen] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CScreen::CScreen()
{

}

//============================================================
//	デストラクタ
//============================================================
CScreen::~CScreen()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CScreen::Init()
{
	// オブジェクト2Dの初期化
	if (FAILED(CObject2D::Init()))
	{ // 初期化に失敗した場合

		assert(false);
		return E_FAIL;
	}

	// 位置をスクリーン中央にする
	SetVec3Position(SCREEN_CENT);

	// 大きさをスクリーンサイズにする
	SetVec3Size(SCREEN_SIZE);

	// 自動更新・自動描画をOFFにする
	SetEnableUpdate(false);
	SetEnableDraw(false);

	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CScreen::Uninit()
{
	// オブジェクト2Dの終了
	CObject2D::Uninit();
}

//============================================================
//	更新処理
//============================================================
void CScreen::Update(const float fDeltaTime)
{
	// オブジェクト2Dの更新
	CObject2D::Update(fDeltaTime);
}

//============================================================
//	描画処理
//============================================================
void CScreen::Draw(CShader* pShader)
{
	// オブジェクト2Dの描画
	CObject2D::Draw(pShader);
}

//============================================================
//	生成処理
//============================================================
CScreen* CScreen::Create(const int nScreenTexIdx)
{
	// スクリーンの生成
	CScreen* pScreen = new CScreen;
	if (pScreen == nullptr)
	{ // 生成に失敗した場合

		return nullptr;
	}
	else
	{ // 生成に成功した場合

		// スクリーンの初期化
		if (FAILED(pScreen->Init()))
		{ // 初期化に失敗した場合

			// スクリーンの破棄
			SAFE_DELETE(pScreen);
			return nullptr;
		}

		// テクスチャを登録・割当
		pScreen->BindTexture(nScreenTexIdx);

		// 確保したアドレスを返す
		return pScreen;
	}
}
