//============================================================
//
//	フィールドメニューマネージャー処理 [menuManager.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "menuManager.h"
#include "menuUI.h"

//************************************************************
//	親クラス [CMenuManager] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CMenuManager::CMenuManager() :
	m_pMenu	(nullptr)	// フィールドメニュー情報
{

}

//============================================================
//	デストラクタ
//============================================================
CMenuManager::~CMenuManager()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CMenuManager::Init(void)
{
	// メンバ変数を初期化
	m_pMenu = nullptr;	// フィールドメニュー情報

	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CMenuManager::Uninit(void)
{

}

//============================================================
//	更新処理
//============================================================
void CMenuManager::Update(const float fDeltaTime)
{
	// 選択中の場合抜ける
	if (IsChoiceSelect()) { return; }

	if (input::FieldMenu())
	{
		// フィールドメニューの表示を切り替え
		SetEnableDrawMenu(!IsDrawMenu());
	}

	if (input::Cancel())
	{
		// フィールドメニューの終了
		SetEnableDrawMenu(false);
	}
}

//============================================================
//	フィールドメニューの描画設定処理
//============================================================
void CMenuManager::SetEnableDrawMenu(const bool bDraw)
{
	if (bDraw)
	{ // 描画を開始する場合

		// 生成済みの場合抜ける
		if (m_pMenu != nullptr) { return; }

		// フィールドメニューの生成
		m_pMenu = CMenuUI::Create();
	}
	else
	{ // 描画を終了する場合

		// フィールドメニューの終了
		SAFE_UNINIT(m_pMenu);
	}
}

//============================================================
//	選択中状況の取得処理
//============================================================
bool CMenuManager::IsChoiceSelect(void) const
{
	// メニューが閉じている場合抜ける
	if (m_pMenu == nullptr) { return false; }

	// 選択中状況を返す
	return m_pMenu->IsChoiceSelect();
}

//============================================================
//	生成処理
//============================================================
CMenuManager* CMenuManager::Create(void)
{
	// フィールドメニューマネージャーの生成
	CMenuManager* pMenuManager = new CMenuManager;
	if (pMenuManager == nullptr)
	{ // 生成に失敗した場合

		return nullptr;
	}
	else
	{ // 生成に成功した場合

		// フィールドメニューマネージャーの初期化
		if (FAILED(pMenuManager->Init()))
		{ // 初期化に失敗した場合

			// フィールドメニューマネージャーの破棄
			SAFE_DELETE(pMenuManager);
			return nullptr;
		}

		// 確保したアドレスを返す
		return pMenuManager;
	}
}

//============================================================
//	破棄処理
//============================================================
void CMenuManager::Release(CMenuManager*& prMenuManager)
{
	// フィールドメニューマネージャーの終了
	assert(prMenuManager != nullptr);
	prMenuManager->Uninit();

	// メモリ開放
	SAFE_DELETE(prMenuManager);
}
