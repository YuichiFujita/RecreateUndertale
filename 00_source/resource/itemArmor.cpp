//============================================================
//
//	防具アイテム処理 [itemArmor.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "itemArmor.h"
#include "sceneGame.h"
#include "player.h"
#include "playerStatus.h"

//************************************************************
//	定数宣言
//************************************************************
namespace
{

}

//************************************************************
//	子クラス [CItemArmor] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CItemArmor::CItemArmor()
{

}

//============================================================
//	デストラクタ
//============================================================
CItemArmor::~CItemArmor()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CItemArmor::Init()
{
	// アイテム情報の初期化
	if (FAILED(CItemData::Init()))
	{ // 初期化に失敗した場合

		assert(false);
		return E_FAIL;
	}

	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CItemArmor::Uninit()
{
	// アイテム情報の終了
	CItemData::Uninit();
}

//============================================================
//	アイテム使用処理
//============================================================
void CItemArmor::Use(const int nBagIdx) const
{
	CPlayerStatus* pStatus = CSceneGame::GetPlayer()->GetStatus();	// プレイヤーステータス情報

	// 使用した装備に入れ替え
	pStatus->SwapArmorIdx(nBagIdx);
}

//============================================================
//	アイテム詳細の文字列取得処理
//============================================================
std::string CItemArmor::Detail() const
{
	// アイテム詳細の取得
	std::string sDetail = CItemData::Detail();

	// 防御力上昇量を表示
	sDetail.append("アーマーDF");
	sDetail.append(std::to_string(GetAddDef()));

	// アイテム詳細を返す
	return sDetail;
}

//============================================================
//	種類ごとのセットアップ処理
//============================================================
HRESULT CItemArmor::LoadSetup(std::ifstream* pFile, std::string& /*rString*/)
{
	// ファイルストリームが未設定の場合抜ける
	if (pFile == nullptr) { assert(false); return E_FAIL; }

	return S_OK;
}