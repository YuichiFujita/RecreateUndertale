//============================================================
//
//	ユーザーデータマネージャー処理 [userdataManager.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "userdataManager.h"

//************************************************************
//	静的メンバ変数宣言
//************************************************************
CUserDataManager* CUserDataManager::m_pInstance = nullptr;	// 自身のインスタンス

//************************************************************
//	親クラス [CUserDataManager] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CUserDataManager::CUserDataManager() :
	m_fPlayTime	(0.0f)	// プレイ総時間
{

}

//============================================================
//	デストラクタ
//============================================================
CUserDataManager::~CUserDataManager()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CUserDataManager::Init()
{
	// メンバ変数を初期化
	m_fPlayTime = 0.0f;	// プレイ総時間

	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CUserDataManager::Uninit()
{

}

//============================================================
//	更新処理
//============================================================
void CUserDataManager::Update(const float fDeltaTime)
{
	// プレイ総時間を加算
	m_fPlayTime += fDeltaTime;
}

//============================================================
//	インスタンス生成処理
//============================================================
CUserDataManager* CUserDataManager::Create()
{
	// インスタンス生成済み
	assert(m_pInstance == nullptr);

	// ユーザーデータマネージャーの生成
	m_pInstance = new CUserDataManager;
	if (m_pInstance == nullptr)
	{ // 生成に失敗した場合

		return nullptr;
	}
	else
	{ // 生成に成功した場合

		// ユーザーデータマネージャーの初期化
		if (FAILED(m_pInstance->Init()))
		{ // 初期化に失敗した場合

			// ユーザーデータマネージャーの破棄
			SAFE_DELETE(m_pInstance);
			return nullptr;
		}

		// 確保したアドレスを返す
		return m_pInstance;
	}
}

//============================================================
//	インスタンス取得処理
//============================================================
CUserDataManager* CUserDataManager::GetInstance()
{
	// インスタンス未生成
	assert(m_pInstance != nullptr);

	// 自身のインスタンスを返す
	return m_pInstance;
}

//============================================================
//	インスタンス破棄処理
//============================================================
void CUserDataManager::Release()
{
	// ユーザーデータマネージャーの終了
	assert(m_pInstance != nullptr);
	m_pInstance->Uninit();

	// メモリ開放
	SAFE_DELETE(m_pInstance);
}
