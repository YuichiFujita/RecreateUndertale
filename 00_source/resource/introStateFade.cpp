//============================================================
//
//	フェード状態処理 [introStateFade.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "introStateFade.h"
#include "introManager.h"
#include "introFade.h"

//************************************************************
//	子クラス [CIntroStateFade] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CIntroStateFade::CIntroStateFade() :
	m_pFade	(nullptr)	// フェード
{

}

//============================================================
//	デストラクタ
//============================================================
CIntroStateFade::~CIntroStateFade()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CIntroStateFade::Init(void)
{
	// メンバ変数を初期化
	m_pFade = nullptr;	// フェード

	// フェードの生成
	m_pFade = CIntroFade::Create();
	if (m_pFade == nullptr)
	{ // 生成に失敗した場合

		// 失敗を返す
		assert(false);
		return E_FAIL;
	}

	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CIntroStateFade::Uninit(void)
{
	// 自身の破棄
	delete this;
}

//============================================================
//	更新処理
//============================================================
void CIntroStateFade::Update(const float fDeltaTime)
{
	// フェードアウトしていない場合抜ける
	if (m_pFade->GetFade() != CIntroFade::FADE_OUT) { return; }

	// 物語と状態を遷移させる
	m_pContext->NextStory();
}
